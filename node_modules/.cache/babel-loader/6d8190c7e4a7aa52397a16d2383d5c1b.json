{"ast":null,"code":"var _jsxFileName = \"/Users/navaitkumar/Downloads/react-website-v1-master/src/components/CollapsibleCard.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { ChevronDown } from 'react-feather';\nimport { useSpring, animated, config } from 'react-spring/native';\nimport BezierEasing from 'bezier-easing';\nconst propTypes = {\n  children: PropTypes.node,\n  contentHeight: PropTypes.number,\n  defaultCollapsed: PropTypes.bool,\n  style: PropTypes.any,\n  title: PropTypes.string,\n  useBezier: PropTypes.bool\n};\nconst defaultProps = {\n  contentHeight: 300\n};\nfunction CollapsibleCard(_ref) {\n  let {\n    children,\n    contentHeight,\n    defaultCollapsed,\n    style,\n    title,\n    useBezier,\n    ...props\n  } = _ref;\n  const [isCollapsed, setCollapsed] = useState(defaultCollapsed ? defaultCollapsed : true);\n  const animationConfig = {\n    height: isCollapsed ? 0 : contentHeight,\n    progress: isCollapsed ? 0 : 100,\n    rotation: isCollapsed ? `0deg` : `-180deg`\n    // config: config.stiff,\n  };\n\n  if (useBezier) {\n    animationConfig.config = {\n      duration: 600,\n      easing: t => BezierEasing(0.25, 0, 0, 1)(t)\n    };\n  }\n  const animation = useSpring(animationConfig);\n  const AnimatedView = animated(View);\n  return /*#__PURE__*/React.createElement(View, Object.assign({}, props, {\n    style: [styles.card, style],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(TouchableOpacity, {\n    activeOpacity: 1,\n    onPress: () => setCollapsed(c => !c),\n    style: styles.cardTop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, title), /*#__PURE__*/React.createElement(AnimatedView, {\n    style: {\n      transform: [{\n        rotate: animation.rotation\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChevronDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(AnimatedView, {\n    style: [styles.cardContent, {\n      height: animation.height,\n      borderTopWidth: animation.progress.interpolate({\n        range: [0, 25, 50, 75, 100],\n        output: [0, 0, 0, 0, 1]\n      }),\n      opacity: animation.progress.interpolate({\n        range: [0, 85, 95, 100],\n        output: [0, 0, 0.5, 1]\n      })\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AnimatedView, {\n    style: {\n      transform: [{\n        translateY: animation.progress.interpolate({\n          range: [0, 85, 95, 100],\n          output: [7.5, 5, 2.5, 0]\n        })\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, children)));\n}\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 6,\n    justifyContent: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84\n  },\n  cardTop: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 8\n  },\n  cardContent: {\n    borderTopWidth: 1,\n    borderColor: '#ddd'\n  }\n});\nCollapsibleCard.propTypes = propTypes;\nCollapsibleCard.defaultProps = defaultProps;\nexport default CollapsibleCard;","map":{"version":3,"names":["React","useState","PropTypes","StyleSheet","Text","View","TouchableOpacity","ChevronDown","useSpring","animated","config","BezierEasing","propTypes","children","node","contentHeight","number","defaultCollapsed","bool","style","any","title","string","useBezier","defaultProps","CollapsibleCard","_ref","props","isCollapsed","setCollapsed","animationConfig","height","progress","rotation","duration","easing","t","animation","AnimatedView","createElement","Object","assign","styles","card","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","activeOpacity","onPress","c","cardTop","transform","rotate","cardContent","borderTopWidth","interpolate","range","output","opacity","translateY","create","backgroundColor","borderRadius","justifyContent","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","flexDirection","alignItems","padding","borderColor"],"sources":["/Users/navaitkumar/Downloads/react-website-v1-master/src/components/CollapsibleCard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { ChevronDown } from 'react-feather';\nimport { useSpring, animated, config } from 'react-spring/native';\nimport BezierEasing from 'bezier-easing';\n\nconst propTypes = {\n  children: PropTypes.node,\n  contentHeight: PropTypes.number,\n  defaultCollapsed: PropTypes.bool,\n  style: PropTypes.any,\n  title: PropTypes.string,\n  useBezier: PropTypes.bool,\n};\n\nconst defaultProps = {\n  contentHeight: 300,\n};\n\nfunction CollapsibleCard({\n  children,\n  contentHeight,\n  defaultCollapsed,\n  style,\n  title,\n  useBezier,\n  ...props\n}) {\n  const [isCollapsed, setCollapsed] = useState(\n    defaultCollapsed ? defaultCollapsed : true\n  );\n\n  const animationConfig = {\n    height: isCollapsed ? 0 : contentHeight,\n    progress: isCollapsed ? 0 : 100,\n    rotation: isCollapsed ? `0deg` : `-180deg`,\n    // config: config.stiff,\n  };\n\n  if (useBezier) {\n    animationConfig.config = {\n      duration: 600,\n      easing: t => BezierEasing(0.25, 0, 0, 1)(t),\n    };\n  }\n\n  const animation = useSpring(animationConfig);\n  const AnimatedView = animated(View);\n\n  return (\n    <View {...props} style={[styles.card, style]}>\n      {/* Card Top */}\n      <TouchableOpacity\n        activeOpacity={1}\n        onPress={() => setCollapsed(c => !c)}\n        style={styles.cardTop}>\n        <Text>{title}</Text>\n        <AnimatedView style={{ transform: [{ rotate: animation.rotation }] }}>\n          <ChevronDown />\n        </AnimatedView>\n      </TouchableOpacity>\n\n      {/* Card Content */}\n      <AnimatedView\n        style={[\n          styles.cardContent,\n          {\n            height: animation.height,\n            borderTopWidth: animation.progress.interpolate({\n              range: [0, 25, 50, 75, 100],\n              output: [0, 0, 0, 0, 1],\n            }),\n            opacity: animation.progress.interpolate({\n              range: [0, 85, 95, 100],\n              output: [0, 0, 0.5, 1],\n            }),\n          },\n        ]}>\n        {/* Inner */}\n        <AnimatedView\n          style={{\n            transform: [\n              {\n                translateY: animation.progress.interpolate({\n                  range: [0, 85, 95, 100],\n                  output: [7.5, 5, 2.5, 0],\n                }),\n              },\n            ],\n          }}>\n          {children}\n        </AnimatedView>\n      </AnimatedView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 6,\n    justifyContent: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  cardTop: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 8,\n  },\n  cardContent: {\n    borderTopWidth: 1,\n    borderColor: '#ddd',\n  },\n});\n\nCollapsibleCard.propTypes = propTypes;\nCollapsibleCard.defaultProps = defaultProps;\n\nexport default CollapsibleCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}